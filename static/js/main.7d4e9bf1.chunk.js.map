{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBACAC,UAAY,sDADZ,UAEI,qBAAKC,IAAG,+BACkBJ,EADlB,YACiCK,IAAK,gBAC9C,gCACI,6BAAMJ,IACN,6BAAMC,WCgBPI,EAvBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAE,EAAF,CAEIV,GAAOO,EAAOG,GAAGV,GACjBC,KAASM,EAAOG,GAAGT,KACnBC,MAAUK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCE/BW,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAY,MAAjB,SACI,uBACIA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCbI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACMJ,EAAMK,aCiBLC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAhBCQ,aCiDZC,E,kDA1CX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJR,E,qDASb,WAAoB,IAAD,OAEfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAASkC,S,oBAM5C,WAAS,IAAD,OACEC,EAAiBd,KAAKJ,MAAMjB,OAAOoC,QAAO,SAAAC,GAC5C,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAEpE,OAAIjB,KAAKJ,MAAMjB,OAAOwC,OAKd,sBAAK5C,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,aAAiBgB,KAAKI,iBACjC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAWmC,WAT9B,oBAAIvC,UAAY,SAAhB,4B,GAzBD2B,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d4e9bf1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n    return (\n        <div \n        className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img src = \n            { `https://robohash.org/${id}?200x200` } alt =\"Robo-Images\"/>\n            <div>\n                <h2>{ name }</h2>\n                <h4>{ email }</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    // if(1){\n    //     throw new Error('NOOO');\n    // }\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        < Card \n                            key = { robots[i].id }\n                            id = { robots[i].id } \n                            name = { robots[i].name }\n                            email = { robots[i].email} \n                        />\n                    );\n\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className = \"pa3\">\n            <input \n                className = \"pa3 ba b--green bg-lightest-blue\" \n                type = \"search\" \n                placeholder = \"search robots\"\n                onChange = {searchChange} \n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style = {{overflow: 'scroll', border: '2px solid black', height: '700px' }}>\n            { props.children }\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({ hasError: true })\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Ooops. There is an Error</h1>;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\n// import { robots } from './robots';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n        // alert(\"Running Constru...\");\n    }\n\n    componentDidMount(){\n        // alert(\"COmp..did..MOunt\");\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots : users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n    render(){\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if(!this.state.robots.length){\n            return <h1 className = \"tc pa5\">Loading...</h1>\n        }\n        else{\n            return (\n                <div className = \"tc\">\n                    <h1 className = \"f1\">RoboFriends</h1>\n                    <SearchBox searchChange = { this.onSearchChange }/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots = { filteredRobots }/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}